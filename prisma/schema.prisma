generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [uuidOssp(map: "uuid-ossp")]
}

// model User {
//   id           String       @id @default(uuid())
//   name         String
//   email        String
//   avatarUrl    String?
//   created_at   DateTime     @default(now())
//   classes_wi23 Class_WI23[] @relation("Class_WI23ToUser")
// }

model User {
  id           String       @id @default(cuid())
  name         String?
  email        String?      @unique
  emailVerified DateTime?
  image        String?
  accounts     Account[]
  sessions     Session[]
  created_at   DateTime     @default(now())
  classes_wi23 Class_WI23[] @relation("Class_WI23ToUser")
  classes_test Class_test[]
}

model Class_WI23 {
  class_name  String
  instructor  String
  total_seats Int?
  sections    String?
  id          String   @id @default(uuid())
  created_at  DateTime @default(now())
  students    User[]   @relation("Class_WI23ToUser")
}

model Class_test {
  id          String    @id @unique @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  class_name  String?
  instructor  String?
  total_seats Int?
  sections    String?
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  students    User[]
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
